{"version":3,"sources":["panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","style","paddingTop","paddingBottom","color","stretched","mode","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","connect","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"6rBA2DeA,EAjDF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACb,kBAAC,IAAD,CAAOF,GAAIA,GACC,kBAAC,IAAD,8FACCE,GACL,kBAAC,IAAD,CAAOC,MAAM,qCACT,kBAAC,IAAD,CACIC,OAAQF,EAAYG,UAAY,kBAAC,IAAD,CAAQC,IAAKJ,EAAYG,YAAe,KACxEE,YAAaL,EAAYM,MAAQN,EAAYM,KAAKL,MAAQD,EAAYM,KAAKL,MAAQ,IAFvF,UAIQD,EAAYO,WAJpB,YAIkCP,EAAYQ,aAIxD,kBAAC,IAAD,CAAKC,MAAO,CAAEC,WAAY,GAAIC,cAAe,EAAGC,MAAO,SAAvD,uvBAEgB,6BACA,6BAHhB,ypBASM,kBAAC,IAAD,CAAOX,MAAM,sBACT,kBAAC,IAAD,KACT,kBAAC,IAAD,CAAQY,WAAS,EAACC,KAAK,WAAWC,KAAK,KAAKC,MAAM,IAAIC,QAASlB,EAAImB,UAAQ,UAA3E,qJ,8DCvBGC,G,OAASC,eAmBAC,EAjBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOxB,GAAIwB,EAAMxB,IACd,kBAAC,IAAD,CACOyB,KAAM,kBAAC,IAAD,CAAmBN,QAASK,EAAMvB,GAAImB,UAAQ,QACzDC,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF1C,wGC2BWC,EAlCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEV1B,EAFU,KAEG6B,EAFH,OAGWH,mBAAS,MAHpB,mBAGVI,EAHU,KAGFC,EAHE,KAMjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAQC,KAAK,uBADjC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAQG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACpC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAMlD,EAAK,SAAAmD,GACVtB,EAAesB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAM1B,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAMhC,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,MC5B3BmC,IAAQC,KAAK,gBAQbmB,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.5b008001.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => (\n<Panel id={id}>\n            <PanelHeader>Предложить идею</PanelHeader>\n            {fetchedUser &&\n        <Group title=\"User Data Fetched with VK Connect\">\n            <Cell\n                before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n            >\n                {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n    \n            </Cell>\n        </Group>}\n\t\t<Div style={{ paddingTop: 20, paddingBottom: 0, color: 'gray' }}>\n                  В приложении ВКонтакте есть множество самых различних сервисов, с самыми разными функциями. Наш сервис отличается тем, что его создаёте именно вы.\n                  <br/>\n                  <br/>\n               Каждый пользователь ВКонтакте может предложить свою идею для нового раздела, для новой функции и мы попытаемся реализовать её.\n                </Div>\n\n\n\n        <Group title=\"Navigation Example\">\n            <Div>\n\t\t\t<Button stretched mode=\"commerce\" size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n          Помочь с созданием сервиса\n                </Button>\n            </Div>\n\t\t\t</Group>\n    </Panel>\n\n);\n\n\n\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS, PanelSpinner } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n    <PanelHeader\n           left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t   {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t   </PanelHeaderButton>}\n   >\n\t   Помочь с созданием\n   </PanelHeader>\n    </Panel>\n);\n \nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n const [activePanel, setActivePanel] = useState('home');\n const [fetchedUser, setUser] = useState(null);\n const [popout, setPopout] = useState(null);\n\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t\t</View>\n\t);\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}